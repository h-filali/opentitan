from random import randrange

def print_vec_hex(vec, length = 256):
    vec_str = []
    for i in range(length):
        vec_str += ['0x' + '{:08X}'.format(vec[i])]
    print(vec_str)

q = 8380417
R = 1732267787797143553
factor = -(2**64) % q

# w = [randrange(q) for _ in range(256)]

w =    [0x0060FC78, 0x002D0230, 0x002A2114, 0x0025C490,
        0x0025D781, 0x0038F5B2, 0x00475320, 0x004907AA,
        0x00080853, 0x003D7E45, 0x0025C590, 0x0072939A,
        0x004807CC, 0x004A34C0, 0x00057204, 0x007006AF,
        0x003030BB, 0x006DAA68, 0x0075D2A9, 0x005AC31B,
        0x00595FC2, 0x002D0E84, 0x0057A4A4, 0x00471722,
        0x002CBA7B, 0x0013EB7E, 0x001B3277, 0x00533D4E,
        0x00695224, 0x006195DA, 0x004C799A, 0x002E253D,
        0x00015952, 0x000CD7CF, 0x00708758, 0x00285707,
        0x00783E7B, 0x005895F8, 0x0014D14B, 0x0038C0F5,
        0x00566EDC, 0x001027F6, 0x000C631F, 0x00081F8C,
        0x000EA60B, 0x0005ED5E, 0x0035B6B0, 0x005A2A27,
        0x006FEA32, 0x0024A266, 0x005BD287, 0x004ED1FD,
        0x006A1ED8, 0x006906A0, 0x0053133E, 0x0036AB36,
        0x005D0FDF, 0x001E6A3D, 0x00202D00, 0x0014B783,
        0x00356821, 0x005AA9C9, 0x0023B661, 0x00088AE9,
        0x004FC98E, 0x005B2841, 0x004869BA, 0x004BA979,
        0x000634DC, 0x000A10C8, 0x002D8532, 0x000A8611,
        0x00736E04, 0x00194D7C, 0x004FA9E0, 0x00139F4F,
        0x001A4980, 0x00236D28, 0x0053C904, 0x0077E267,
        0x0021D117, 0x0070210B, 0x0021FD42, 0x006388AC,
        0x003A435C, 0x005B3E04, 0x007D94D6, 0x00415584,
        0x00479C7C, 0x00273C82, 0x003A499F, 0x0046D934,
        0x001B043B, 0x0034644C, 0x005E9B3D, 0x007E524B,
        0x004006A1, 0x007D72BC, 0x00255C7B, 0x00774D10,
        0x0035B779, 0x002BEAD2, 0x006EA3D2, 0x0072D1B5,
        0x006B0AD5, 0x002490F9, 0x002C653A, 0x00400209,
        0x0050B408, 0x000147F8, 0x0020CD52, 0x0016F475,
        0x005268A3, 0x00567E8F, 0x003AAADA, 0x003A1B75,
        0x0034D477, 0x000E1CB3, 0x002D25D2, 0x001C40C9,
        0x00774F25, 0x006DE42A, 0x002B4340, 0x0047CC89,
        0x001724F5, 0x0018E549, 0x001AA9F2, 0x00421954,
        0x004777A5, 0x00372DAA, 0x007906B2, 0x00613D41,
        0x000C00EB, 0x00183FFE, 0x005C760A, 0x003F8190,
        0x004BF439, 0x0012AC2D, 0x007CA0E1, 0x0037D0E4,
        0x007A709D, 0x0071D97B, 0x0072DF19, 0x000013DC,
        0x002C16E1, 0x0028D750, 0x00574AB4, 0x000C533D,
        0x00016016, 0x005FC8F0, 0x0036A32E, 0x003F35F9,
        0x000BAAB7, 0x0026A92F, 0x007C6DB5, 0x0074FD65,
        0x006D55BA, 0x002BAF75, 0x001376D4, 0x000F12AA,
        0x0074430E, 0x007BAB9E, 0x007DD540, 0x007E2968,
        0x00555B81, 0x005D2512, 0x00577CCA, 0x001FF1F9,
        0x005ED915, 0x007A3581, 0x00254C08, 0x00738226,
        0x007291E4, 0x00551691, 0x005CC299, 0x006BB1AB,
        0x00220133, 0x005C57B8, 0x0020F375, 0x000BA294,
        0x00182FAE, 0x005CDA7A, 0x004DB334, 0x00559F0F,
        0x001FAF5B, 0x0042BE26, 0x007E9067, 0x006E5028,
        0x000A0E87, 0x0066A710, 0x006E29B7, 0x007A1905,
        0x000ED243, 0x00781DCC, 0x0068EFF1, 0x001990FA,
        0x006072D5, 0x0057554D, 0x001EC93E, 0x004B58AE,
        0x003EF5C4, 0x0028B8CC, 0x002F3631, 0x00595322,
        0x002E52AA, 0x007A6755, 0x00311980, 0x00050A4F,
        0x00328251, 0x00510941, 0x00160714, 0x006D359C,
        0x0013C262, 0x001AE8FD, 0x0026012D, 0x00249BF0,
        0x00242A57, 0x001AEF4E, 0x0002A575, 0x001448A4,
        0x007884BD, 0x00665BAA, 0x0020AAE0, 0x00372ACB,
        0x00300D08, 0x006B2E97, 0x005C8F82, 0x005F7E50,
        0x007FBE01, 0x005AC259, 0x0072CEE2, 0x0010D726,
        0x00138122, 0x00604FF0, 0x001A96C5, 0x003CB96D,
        0x0066A42F, 0x0048166B, 0x0067B4EA, 0x0056A296,
        0x00726E0E, 0x000A7921, 0x00614496, 0x000C8E00,
        0x0072F994, 0x003863F1, 0x003736EE, 0x001FFDEF,
        0x0033FC89, 0x002D6E48, 0x0059DD87, 0x002CC657,
        0x0053C105, 0x002D7B43, 0x00692453, 0x0051FD00]

zetas = [ 0,        4808194,  3765607,  3761513,  5178923,  5496691,  5234739,  5178987,
          7778734,  3542485,  2682288,  2129892,  3764867,  7375178,  557458,   7159240,
          5010068,  4317364,  2663378,  6705802,  4855975,  7946292,  676590,   7044481,
          5152541,  1714295,  2453983,  1460718,  7737789,  4795319,  2815639,  2283733,
          3602218,  3182878,  2740543,  4793971,  5269599,  2101410,  3704823,  1159875,
          394148,   928749,   1095468,  4874037,  2071829,  4361428,  3241972,  2156050,
          3415069,  1759347,  7562881,  4805951,  3756790,  6444618,  6663429,  4430364,
          5483103,  3192354,  556856,   3870317,  2917338,  1853806,  3345963,  1858416,
          3073009,  1277625,  5744944,  3852015,  4183372,  5157610,  5258977,  8106357,
          2508980,  2028118,  1937570,  4564692,  2811291,  5396636,  7270901,  4158088,
          1528066,  482649,   1148858,  5418153,  7814814,  169688,   2462444,  5046034,
          4213992,  4892034,  1987814,  5183169,  1736313,  235407,   5130263,  3258457,
          5801164,  1787943,  5989328,  6125690,  3482206,  4197502,  7080401,  6018354,
          7062739,  2461387,  3035980,  621164,   3901472,  7153756,  2925816,  3374250,
          1356448,  5604662,  2683270,  5601629,  4912752,  2312838,  7727142,  7921254,
          348812,   8052569,  1011223,  6026202,  4561790,  6458164,  6143691,  1744507,
          1753,     6444997,  5720892,  6924527,  2660408,  6600190,  8321269,  2772600,
          1182243,  87208,    636927,   4415111,  4423672,  6084020,  5095502,  4663471,
          8352605,  822541,   1009365,  5926272,  6400920,  1596822,  4423473,  4620952,
          6695264,  4969849,  2678278,  4611469,  4829411,  635956,   8129971,  5925040,
          4234153,  6607829,  2192938,  6653329,  2387513,  4768667,  8111961,  5199961,
          3747250,  2296099,  1239911,  4541938,  3195676,  2642980,  1254190,  8368000,
          2998219,  141835,   8291116,  2513018,  7025525,  613238,   7070156,  6161950,
          7921677,  6458423,  4040196,  4908348,  2039144,  6500539,  7561656,  6201452,
          6757063,  2105286,  6006015,  6346610,  586241,   7200804,  527981,   5637006,
          6903432,  1994046,  2491325,  6987258,  507927,   7192532,  7655613,  6545891,
          5346675,  8041997,  2647994,  3009748,  5767564,  4148469,  749577,   4357667,
          3980599,  2569011,  6764887,  1723229,  1665318,  2028038,  1163598,  5011144,
          3994671,  8368538,  7009900,  3020393,  3363542,  214880,   545376,   7609976,
          3105558,  7277073,  508145,   7826699,  860144,   3430436,  140244,   6866265,
          6195333,  3123762,  2358373,  6187330,  5365997,  6663603,  2926054,  7987710,
          8077412,  3531229,  4405932,  4606686,  1900052,  7598542,  1054478,  7648983]

for i in range(256):
    zetas[i] = (-1 * zetas[i]) % q
    zetas[i] = (zetas[i] * factor) % q
    zetas[i] = (zetas[i] * R) % (2**64)

print_vec_hex(w, len(w))
print_vec_hex(zetas, len(zetas))

zetas_ordered = []

for i in range(0,16):
    # Round 1
    zetas_ordered += [zetas[255 - 8*i]]
    zetas_ordered += [zetas[255 - 1 - 8*i]]
    zetas_ordered += [zetas[255 - 2 - 8*i]]
    zetas_ordered += [zetas[255 - 3 - 8*i]]
    zetas_ordered += [zetas[255 - 4 - 8*i]]
    zetas_ordered += [zetas[255 - 5 - 8*i]]
    zetas_ordered += [zetas[255 - 6 - 8*i]]
    zetas_ordered += [zetas[255 - 7 - 8*i]]
    # Round 2
    zetas_ordered += [zetas[255 - 128 - 4*i]]
    zetas_ordered += [zetas[255 - 128 - 1 - 4*i]]
    zetas_ordered += [zetas[255 - 128 - 2 - 4*i]]
    zetas_ordered += [zetas[255 - 128 - 3 - 4*i]]
    # Round 3
    zetas_ordered += [zetas[255 - 128 - 64 - 2*i]]
    zetas_ordered += [zetas[255 - 128 - 64 - 1 - 2*i]]
    # Round 4
    zetas_ordered += [zetas[255 - 128 - 64 - 32 - i]]

    zetas_ordered += [0]

for i in range(0,15):
    zetas_ordered += [zetas[15 - i]]

zetas_ordered += [0]

print_vec_hex(zetas_ordered, len(zetas_ordered))

m = 256
len = 1
while len < 256:
    start = 0
    while start < 256:
        m -= 1
        z = zetas[m]
        for j in range(start, start + len):
            t = w[j]
            w[j] = (t + w[j + len]) % q
            w[j + len] = (t - w[j + len]) % q
            w[j + len] = (z * w[j + len]) % (2**64)
            w[j + len] = w[j + len] >> 32
            w[j + len] += 1
            w[j + len] *= q
            w[j + len] = w[j + len] >> 32
        start = start + 2 * len
    len = len * 2

f = 8347681
f = (f * factor) % q
f = (f * R) % (2**64)

for j in range(256):
    w[j] = (f * w[j]) % (2**64)
    w[j] = w[j] >> 32
    w[j] += 1
    w[j] *= q
    w[j] = w[j] >> 32

print_vec_hex(w)
